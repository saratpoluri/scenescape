#!/bin/bash

# SPDX-FileCopyrightText: (C) 2022 - 2025 Intel Corporation
# SPDX-License-Identifier: LicenseRef-Intel-Edge-Software
# This file is licensed under the Limited Edge Software Distribution License Agreement.

shopt -s lastpipe

LISTLOG=${LISTLOG:-0}
REPORT=/tmp/report.$$
HIDE_DISABLED=${HIDE_DISABLED:-true}
IGNORE={}
BASEDIR=$(dirname "$0")
TEST_MAKEFILE=${BASEDIR}/Makefile
MAKEFILES=(Makefile $( sed -e ':a;N;$!ba;s/\\\n/ /g' ${TEST_MAKEFILE} | grep "^include" | sed 's/^[^ ]* //' ))
MAKEFILES=(${MAKEFILES[@]/#/${BASEDIR}/})
HIDE_SUMMARY=${HIDE_SUMMARY:-false}
PASS_COUNTER=0
FAIL_COUNTER=0

while [ $# -gt 0 -a x$(expr substr "${1:-empty}" 1 2) = "x--" ] ; do
    case "$1" in
        --listlog)
            LISTLOG=1
            shift
            ;;
    --show-disabled)
        HIDE_DISABLED=false
        shift
        ;;
    --hide-summary)
        HIDE_SUMMARY=true
        shift
        ;;
    esac
done

if [ x${HIDE_DISABLED} = xtrue ] ; then \
    IGNORE=($( sed -e ':a;N;$!ba;s/\\\n/ /g' ${MAKEFILES[@]} | grep '^disabled[-a-zA-Z0-9_]*:' | awk -F ':' '{print $2}' ))
    echo IGNORING ${IGNORE}
fi

TEST_DATA=$1
printf "MAKE_TARGET|TEST_NAME|RESULT" >> $REPORT
if [ $LISTLOG = 1 ] ; then
    printf "|LOGFILE" >> $REPORT
fi
printf "\n" >> $REPORT
# get unique filename prefixes list
find $TEST_DATA -iname "*.log" -print \
    | sort -r \
    | awk '{t = $1 ; sub(/[_-][0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]-[0-9][0-9]:[0-9][0-9]:[0-9][0-9].log/, "", t); if (t != p) print $1; p=t}' \
    | while read FILE
do
    TARGET=$(grep -ohP '(?<=MAKE_TARGET:)'.*$ $FILE)
    # condition to check if current target in IGNORE
    if [[ " ${IGNORE[@]} " =~ ${TARGET} ]] ; then \
        continue
    fi
    grep -ohP 'NEX-T.*':.*$ $FILE \
    | while read TEST;
    do
        TEST_NAME=$(echo "$TEST" | grep -oP 'NEX-T.*?(?=\:)')
        RESULT=$(echo "$TEST" | grep -oE 'PASS')
        if [ -n "$TARGET" -o -n "$TEST_NAME" ]
        then
            if [ -z "$TARGET" ]
            then
                TARGET='-'
            fi

            if [ -z "$TEST_NAME" ]
            then
                TEST_NAME='-'
            fi

            if [ -z "$RESULT" ]
            then
                RESULT='FAIL'
                (( FAIL_COUNTER++ ))
            else
                RESULT='PASS'
                (( PASS_COUNTER++ ))
            fi

            printf "%s|%s|%s" "$TARGET" "$TEST_NAME" "$RESULT" >> $REPORT
            if [ $LISTLOG = 1 ] ; then
                printf "|%s" "$FILE" >> $REPORT
            fi
            printf "\n" >> $REPORT
        fi
    done
done

OUTPUT_SEP='--output-separator=|'
if ! column "$OUTPUT_SEP" </dev/null >/dev/null 2>&1 ; then
    OUTPUT_SEP=""
fi
column -t $OUTPUT_SEP -s '|' $REPORT | sed -e 's/|/| /g'
if ! $HIDE_SUMMARY; then
    printf "\nPASS: %d\nFAIL: %d\n" "$PASS_COUNTER" "$FAIL_COUNTER"
fi
rm -f $REPORT
