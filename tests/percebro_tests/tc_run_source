#!/bin/bash

# SPDX-FileCopyrightText: (C) 2023 - 2025 Intel Corporation
# SPDX-License-Identifier: LicenseRef-Intel-Edge-Software
# This file is licensed under the Limited Edge Software Distribution License Agreement.

TEST_RESULT=1
TEST_SOURCE=${1:-sample_data/apriltag-cam1.mp4}
TEST_MODEL=${MODEL:-retail}
TEST_EXTRA_ARGS=${EXTRA_ARGS:-}
NUM_FRAMES=${FRAMES:-50}

TEST_STDOUT=test_run_source_stdout.txt
TEST_STDERR=test_run_source_stderr.txt

TEST_DONE=0
TEST_MAX_WAIT=90
WAIT_TIME=5
TEST_RUN_TIME=0
INTRINSICS="{\"fov\":70}"

echo "Running with extra args ${TEST_EXTRA_ARGS}"
percebro/percebro  -i "${TEST_SOURCE}" --mqttid camera1 -m ${TEST_MODEL} \
        --cvcores 1 --ovcores 4  --modelconfig percebro/config/model-config.json \
        --stats --frames ${NUM_FRAMES} --debug ${TEST_EXTRA_ARGS} \
        --intrinsics=${INTRINSICS} > ${TEST_STDOUT} 2> ${TEST_STDERR} &
TESTPID=$!
while [[ $TEST_DONE -ne 1 ]]
do

  if ps -p ${TESTPID} > /dev/null
  then
    echo "Waiting on test... ${TEST_RUN_TIME}/${TEST_MAX_WAIT} seconds"
    TEST_RUN_TIME=$(( ${TEST_RUN_TIME} + ${WAIT_TIME} ))

    if [[ $TEST_RUN_TIME -gt ${TEST_MAX_WAIT} ]]
    then
      echo "Reached max wait time of ${TEST_MAX_WAIT}"
      kill -9 ${TESTPID}
      TEST_RESULT=1
      TEST_DONE=1
    else
      sleep ${WAIT_TIME}
    fi
  else
    wait ${TESTPID}
    TEST_RESULT=$?
    echo "Test exited with result ${TEST_RESULT}"
    FRAMES_DECODED=$( grep FPS ${TEST_STDERR} | awk '{print $1}' | tail -n 1 )
    echo "Decoded ${FRAMES_DECODED} frames, expected ${NUM_FRAMES}"
    if [[ ${FRAMES_DECODED} -lt ${NUM_FRAMES} ]]
    then
      echo "Marking test as failed"
      TEST_RESULT=1
    fi
    TEST_DONE=1
  fi

done

if [[ ${TEST_RESULT} -ne 0 ]]
then
  echo "Test for video source ${TEST_SOURCE} failed"
  echo "Look at ${TEST_STDOUT} / ${TEST_STDERR} for more info"
else
  rm -f ${TEST_STDOUT} ${TEST_STDERR}
fi

exit $TEST_RESULT
